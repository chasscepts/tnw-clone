@function first-char($string) {
  @return str-slice($string, 1, 1);
}

@mixin root-sigleton($class, $attr, $val) {
  .#{$class} {
    #{$attr}: $val;
  }
}

@mixin pm($attr, $map) {
  $pre-selector: first-char($attr);

  @each $selector, $list in $map {
    $full-selector: if($selector==$attr, $pre-selector, $pre-selector#{first-char($selector)});

    @each $val in $list {
      $attr: if($selector==padding, padding, padding-#{$selector});

      .#{$full-selector}-#{$val} {
        #{$attr}: #{$val}px;
      }
    }
  }
}

@mixin plain-list {
  ul {
    &.plain {
      margin: 0;
      padding: 0;
      list-style: none;
    }

    &.h-list {
      li {
        display: inline-block;
        padding-left: 5px;
        padding-right: 5px;
      }
    }
  }
}

@mixin popup {
  .has-popup {
    position: relative;

    .popup {
      position: absolute;
      display: none;
    }

    &:hover .popup {
      display: block;
    }
  }
}
